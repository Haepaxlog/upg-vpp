# syntax = docker/dockerfile:experimental
FROM ubuntu:focal AS build-stage

WORKDIR /

COPY vpp/Makefile /src/vpp/Makefile
COPY vpp/build/external /src/vpp/build/external

# netbase is needed for Scapy
RUN --mount=target=/var/lib/apt/lists,type=cache,sharing=private \
    --mount=target=/var/cache/apt,type=cache,sharing=private \
    apt-get update && \
    apt-get dist-upgrade -yy && \
    apt-get install -y software-properties-common && \
    add-apt-repository ppa:longsleep/golang-backports && \
    add-apt-repository ppa:aschultz/ppa && \
    apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
            build-essential sudo git netbase curl ca-certificates \
            golang-go iproute2 gdb tcpdump iputils-ping libpcap-dev \
            dumb-init dh-python && \
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add - && \
    add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" && \
    apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
            docker-ce docker-ce-cli && \
    cd /src/vpp && \
    git config --global user.email "dummy@example.com" && \
    git config --global user.name "dummy user" && \
    git init && \
    git add Makefile && \
    git commit -m "dummy commit" && \
    git tag -a v20.05-rc0 -m "dummy tag" && \
    make UNATTENDED=yes install-dep install-ext-dep && \
    apt-get clean && \
    rm -rf /src/vpp

ENV GOPATH /go

RUN go get github.com/onsi/ginkgo/ginkgo && \
    mv /go/bin/ginkgo /usr/local/bin

CMD ["/bin/bash"]
ENTRYPOINT ["/usr/bin/dumb-init", "--"]
